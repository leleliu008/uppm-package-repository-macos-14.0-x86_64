name: publish

on:
  workflow_dispatch

jobs:

  build1:
    strategy:
      fail-fast: false
      matrix:
        pkg: [aalib, act, actionlint, adig, ag, age, alacritty, alass, algernon, anchor-cli, antibody, apkeep, aptly, archiver, args, aria2, autoconf-archive, automake, autossh, autotools-setup, awk, axel, b3sum, bandwhich, base16, base64, bash, basis_universal, bat, bazelisk, bc, bcrypt, bdw-gc, bear, berkeley-db, bgrep, binaryen, bind, binocle, bison, bitcoin, bk, blockhash, bmake, boringssl, botan, bottom, boxes, brook, broot, bsdtar, bullet, byacc, bzip2, c-examples, caddy, cargo-c, cargo-deb, catch2, catimg, ccache, cereal, cflow, cgal, chafa, cheat, check, chezmoi, chicken, chinese-calendar, chisel, choose, cli11, clog, cmake, cmark, cmatrix, coreutils, cotp, cpio, cppcheck, cppunit, cpuid, cpuinfo, croc, crosstool-ng, crowbook, ctop, cue, curlie, cxxopts, d2, darkhttpd, dasel, dash, dav1d, delta, diffutils, distcc, dmalloc, dns2tcp, dnslookup, dnsmap, dnsx, dog, doggo, dos2unix, dot_static, doxygen, dtc, dua, duf, dufs, duktape, dust, dylibbundler, easyutils, ed, elvish, epsilon, esbuild, ethereum, exa, exhale, exiv2, eza, faac, faad2]

    runs-on: macos-13

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/xcpkg/master/xcpkg
      - run: chmod +x xcpkg

      - run: ./xcpkg env
      - run: ./xcpkg setup
      - run: ./xcpkg update
      - run: ./xcpkg install MacOSX-14.0-x86_64/${{ matrix.pkg }}

      - name: pack
        run: |
          set -ex

          for item in $(./xcpkg ls-installed)
          do
              ./xcpkg pack "$item"

              PACKAGE_SUMMARY="$(./xcpkg info-installed "$item" summary)"
              PACKAGE_WEB_URL="$(./xcpkg info-installed "$item" web-url)"
              PACKAGE_VERSION="$(./xcpkg info-installed "$item" version)"

              PACKAGE_NAME="${item#*/}"

              PACKAGE_FILENAME="$(ls $PACKAGE_NAME-$PACKAGE_VERSION-*.tar.xz)"

              PACKAGE_BIN_SHA="$(./xcpkg run sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

              PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

              cat > "$PACKAGE_NAME.yml" <<EOF
          summary: $PACKAGE_SUMMARY
          webpage: $PACKAGE_WEB_URL
          version: $PACKAGE_VERSION
          bin-url: $PACKAGE_BIN_URL
          bin-sha: $PACKAGE_BIN_SHA
          EOF
          done

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  build2:
    strategy:
      fail-fast: false
      matrix:
        pkg: [fcp, fd, fdk-aac, fdroidcl, fff, figlet, findent, findutils, fish, flac, flatc, flex, flock, fnm, fontconfig, fortune, frei0r, fselect, fsmon, fswatch, fzf, fzy, garble, gawk, gbt, gdu, geographiclib, germanium, getopt, gettext-tools, gh, giflib, gindent, git, git-cliff, git-lfs, gitui, gitwatch, glib-tools, glow, glslang, gm4, gmake, gn, gnu-barcode, gnu-which, gnupg, go-md2man, go-tools, godu, gogs, golang, gomobile, google-benchmark, gopls, goreleaser, gosh, gotop, gotty, gox, gperf, gperftools, gping, gpsim, gputils, grep, grex, groff, gron, grpc-plugins, gsed, gtar, gzip, halibut, helix, helm, hexdump, hexyl, htop, htslib, httpx, hugo, hunspell, hurl, hydroxide, hyperfine, id3lib, ideviceinstaller, intltool, invoice, ixwebsocket, jansson, jemalloc, jfrog-cli, jj, joshuto, jq, json-glib, jump, k9s, kcp, kcptun, ko, krb5, lame, lazygit, lcms2, lcov, ldns, less, lf, libaec, libao, libasprintf, libasync++, libb2, libb64, libbcrypt, libblake3, libcaca, libcddb, libcdio, libcerf, libcfitsio, libcgif, libcpuinfo, libcroco, libduktape]

    runs-on: macos-13

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/xcpkg/master/xcpkg
      - run: chmod +x xcpkg

      - run: ./xcpkg env
      - run: ./xcpkg setup
      - run: ./xcpkg update
      - run: ./xcpkg install MacOSX-14.0-x86_64/${{ matrix.pkg }}

      - name: pack
        run: |
          set -ex

          for item in $(./xcpkg ls-installed)
          do
              ./xcpkg pack "$item"

              PACKAGE_SUMMARY="$(./xcpkg info-installed "$item" summary)"
              PACKAGE_WEB_URL="$(./xcpkg info-installed "$item" web-url)"
              PACKAGE_VERSION="$(./xcpkg info-installed "$item" version)"

              PACKAGE_NAME="${item#*/}"

              PACKAGE_FILENAME="$(ls $PACKAGE_NAME-$PACKAGE_VERSION-*.tar.xz)"

              PACKAGE_BIN_SHA="$(./xcpkg run sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

              PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

              cat > "$PACKAGE_NAME.yml" <<EOF
          summary: $PACKAGE_SUMMARY
          webpage: $PACKAGE_WEB_URL
          version: $PACKAGE_VERSION
          bin-url: $PACKAGE_BIN_URL
          bin-sha: $PACKAGE_BIN_SHA
          EOF
          done

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  build3:
    strategy:
      fail-fast: false
      matrix:
        pkg: [libexhale, libexiv2, libflatbuffers, libglm, libgraphene, libilbc, libimagequant, libintl, libintl-lite, libirecovery, libisoburn, libjpeg, libkrb5, libleveldb, liblinear, liblmdb, liblua, libmaxminddb, libmd, libmesalink, libmetalink, libmhash, libmicrohttpd, libmill, libmimalloc, libminiz, libmpir, libnetpbm, libnng, libopenh264, libphonenumber, libphysfs, libpipeline, libpng++, libpsl, libpugixml, libqalculate, libquiche, libraqm, librasterlite, libraw, libre, libressl, librist, librtmp, libsmi, libspectre, libspng, libsrtp, libtalloc, libtextstyle, libthai, libtinyxml2, libtorrent-rasterbar, libtwolame, libupnp, libusrsctp, libuuid, libvips, libwasmtime, libwavpack, libwebm, libxcrypt, libxml2-python3, libyuv, libzim, libzlog, lief, lighttpd, links, livego, llhttp, llvm+clang+lld, lmdb, lodepng, log4cplus, lolcat, lrzip, lsd, lsof, luau, lunatic, lunzip, lychee, lynx, lz4, lzip, lzo, lzop, magic_enum, mcfly, md4c, mdbook, mdcat, mediainfo, minisign, miniz, minizip, mold, mosh, mozjpeg, mpdecimal, mpg123, mpv, msgpack-c, mujs, nano, nanomsg, nap, nasm, navi, ncdu, neofetch, netcat, nethogs, netpbm, nghttp2, nginx, ngtcp2, ninja, nnn, nsh, nspr, ntbtls, nuclei, nushell, oat++, obfs4proxy]

    runs-on: macos-13

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/xcpkg/master/xcpkg
      - run: chmod +x xcpkg

      - run: ./xcpkg env
      - run: ./xcpkg setup
      - run: ./xcpkg update
      - run: ./xcpkg install MacOSX-14.0-x86_64/${{ matrix.pkg }}

      - name: pack
        run: |
          set -ex

          for item in $(./xcpkg ls-installed)
          do
              ./xcpkg pack "$item"

              PACKAGE_SUMMARY="$(./xcpkg info-installed "$item" summary)"
              PACKAGE_WEB_URL="$(./xcpkg info-installed "$item" web-url)"
              PACKAGE_VERSION="$(./xcpkg info-installed "$item" version)"

              PACKAGE_NAME="${item#*/}"

              PACKAGE_FILENAME="$(ls $PACKAGE_NAME-$PACKAGE_VERSION-*.tar.xz)"

              PACKAGE_BIN_SHA="$(./xcpkg run sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

              PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

              cat > "$PACKAGE_NAME.yml" <<EOF
          summary: $PACKAGE_SUMMARY
          webpage: $PACKAGE_WEB_URL
          version: $PACKAGE_VERSION
          bin-url: $PACKAGE_BIN_URL
          bin-sha: $PACKAGE_BIN_SHA
          EOF
          done

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  build4:
    strategy:
      fail-fast: false
      matrix:
        pkg: [onefetch, openal-soft, opencolorio, opencv, openlibm, openmpi, openslide, openssh, p11-kit, p7zip, packcc, patch, patchelf, pbzip2, pcapplusplus, pget, pigz, pjsip, pkg-config, pkgconf, plog, plzip, png, pngcheck, pngquant, pngsplit, poco, ppkg, procs, progress, proj, psimd, pup, putty, pybind11, python3-setup, q, qemu, qpdf, qrencode, quiche, quickjs, ragel, rang, ranger, rapidjson, rav1e, rclone, re2c, redis, restic, resvg, rhash, ripgrep, ripgrep-all, rlwrap, rsass, rsync, rtmpdump, rtorrent, ruff, rust-analyzer, sassc, scc, sccache, screenresolution, sd, shared-mime-info, shc, shell2http, shellharden, shiori, silicon, simdjson, sjpeg, skcms, sl, slang, socat, soundtouch, speex, spirv-tools, sqlite3, starship, stwolame, stylua, subfinder, supervisord, suricata, svn-lite, swig, syncthing, sysinfo, szip, t1utils, taglib, tarlz, tbox, tcc, tcl, tcpdump, tealdeer, tectonic, tengo, terragrunt, tiff, tig, tinysearch, tlrc, tmux, tokei, toml++, toml11, tree, ttyd, ttygif, ttyrec, tweego, twolame, typos, uctags, unbound, unixodbc, unrar, unzip, uppm, uppm@0.15.2, uppm@0.15.3]

    runs-on: macos-13

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/xcpkg/master/xcpkg
      - run: chmod +x xcpkg

      - run: ./xcpkg env
      - run: ./xcpkg setup
      - run: ./xcpkg update
      - run: ./xcpkg install MacOSX-14.0-x86_64/${{ matrix.pkg }}

      - name: pack
        run: |
          set -ex

          for item in $(./xcpkg ls-installed)
          do
              ./xcpkg pack "$item"

              PACKAGE_SUMMARY="$(./xcpkg info-installed "$item" summary)"
              PACKAGE_WEB_URL="$(./xcpkg info-installed "$item" web-url)"
              PACKAGE_VERSION="$(./xcpkg info-installed "$item" version)"

              PACKAGE_NAME="${item#*/}"

              PACKAGE_FILENAME="$(ls $PACKAGE_NAME-$PACKAGE_VERSION-*.tar.xz)"

              PACKAGE_BIN_SHA="$(./xcpkg run sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

              PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

              cat > "$PACKAGE_NAME.yml" <<EOF
          summary: $PACKAGE_SUMMARY
          webpage: $PACKAGE_WEB_URL
          version: $PACKAGE_VERSION
          bin-url: $PACKAGE_BIN_URL
          bin-sha: $PACKAGE_BIN_SHA
          EOF
          done

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  build5:
    strategy:
      fail-fast: false
      matrix:
        pkg: [utf8.h, utfcpp, util-linux, vala, valijson, vegeta, vim, virustotal-cli, viu, volta, vsftpd, wabt, wasm3, wasmer, wasmtime, watchexec, wavpack, webhook, webp, websocketpp, wget, whois, wolfssl, wuzz, x264, x265, xh, xmake, xmlrpc-c, xmlto, xmlutils, xmlwf, xorg-libxcursor, xorg-libxdamage, xorg-libxmu, xorg-libxpresent, xorg-libxscrnsaver, xorg-libxshmfence, xorg-libxvmc, xorg-libxxf86vm, xorg-xinput, xorriso, xpup, xsltproc, xxd, xxhash, xz, yajl, yaml-cpp, yasm, youtubedr, yq, yyjson, zip, zlib-ng, zls, zola, zopfli, zoxide, zsh, zstd, zsync]

    runs-on: macos-13

    steps:
      - run: curl -LO https://raw.githubusercontent.com/leleliu008/xcpkg/master/xcpkg
      - run: chmod +x xcpkg

      - run: ./xcpkg env
      - run: ./xcpkg setup
      - run: ./xcpkg update
      - run: ./xcpkg install MacOSX-14.0-x86_64/${{ matrix.pkg }}

      - name: pack
        run: |
          set -ex

          for item in $(./xcpkg ls-installed)
          do
              ./xcpkg pack "$item"

              PACKAGE_SUMMARY="$(./xcpkg info-installed "$item" summary)"
              PACKAGE_WEB_URL="$(./xcpkg info-installed "$item" web-url)"
              PACKAGE_VERSION="$(./xcpkg info-installed "$item" version)"

              PACKAGE_NAME="${item#*/}"

              PACKAGE_FILENAME="$(ls $PACKAGE_NAME-$PACKAGE_VERSION-*.tar.xz)"

              PACKAGE_BIN_SHA="$(./xcpkg run sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

              PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

              cat > "$PACKAGE_NAME.yml" <<EOF
          summary: $PACKAGE_SUMMARY
          webpage: $PACKAGE_WEB_URL
          version: $PACKAGE_VERSION
          bin-url: $PACKAGE_BIN_URL
          bin-sha: $PACKAGE_BIN_SHA
          EOF
          done

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  publish:
    needs: [build1, build2, build3, build4, build5]

    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: '*'
          path: .
          merge-multiple: true

      - run: ls

      - run: |
          set -ex

          TAGNAME="$(date +%Y.%m.%d)"

          sed -i "s|@TAGNAME@|$TAGNAME|" *.yml

          mv *.yml formula/

          DIRNAME="uppm-formula-repository-macos-14.0-x86_64-$TAGNAME"

          install -d "$DIRNAME"

          cp -r formula "$DIRNAME/"

          tar cvJf "$DIRNAME.tar.xz" "$DIRNAME"

          sha256sum *.tar.xz > sha256sums.txt

          cat > notes.md <<EOF
          these packages are created by [xcpkg](https://github.com/leleliu008/xcpkg).

          ## Environment Variables

          **following environment variables should be set for \`git\` package**

          \`\`\`bash
          export GIT_EXEC_PATH="\$GIT_INSTALL_DIR/libexec/git-core"
          export GIT_TEMPLATE_DIR="\$GIT_INSTALL_DIR/share/git-core/templates"
          \`\`\`

          **following environment variables should be set for \`file\` package**

          \`\`\`bash
          export MAGIC="\$FILE_INSTALL_DIR/share/misc/magic.mgc"
          \`\`\`

          ## sha256sum

          \`\`\`
          $(cat sha256sums.txt)
          \`\`\`
          EOF

          gh release create "$TAGNAME" *.tar.xz sha256sums.txt --title "$TAGNAME" --notes-file notes.md

          git config --global user.name  "leleliu008"
          git config --global user.email "leleliu008@gmail.com"

          git pull

          git add formula
          git commit -m "release new version $TAGNAME"
          git push origin master
